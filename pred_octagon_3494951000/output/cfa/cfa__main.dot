digraph main {
19 [shape="circle" label="N19\n49"]
61 [shape="circle" label="N61\n48"]
28 [shape="doublecircle" label="N28\n31"]
29 [shape="circle" label="N29\n30"]
32 [shape="diamond" label="N32\n28"]
33 [shape="diamond" label="N33\n27"]
35 [shape="circle" label="N35\n26"]
36 [shape="circle" label="N36\n24"]
37 [shape="circle" label="N37\n23"]
39 [shape="diamond" label="N39\n21"]
40 [shape="diamond" label="N40\n20"]
42 [shape="circle" label="N42\n19"]
43 [shape="circle" label="N43\n17"]
44 [shape="circle" label="N44\n16"]
47 [shape="diamond" label="N47\n13"]
49 [shape="circle" label="N49\n8"]
50 [shape="diamond" label="N50\n12"]
53 [shape="circle" label="N53\n10"]
52 [shape="circle" label="N52\n11"]
48 [shape="circle" label="N48\n6"]
55 [shape="diamond" label="N55\n5"]
56 [shape="diamond" label="N56\n4"]
58 [shape="circle" label="N58\n3"]
59 [shape="circle" label="N59\n1"]
60 [shape="circle" label="N60\n0"]
57 [shape="circle" label="N57\n2"]
54 [shape="circle" label="N54\n9"]
51 [shape="circle" label="N51\n7"]
41 [shape="circle" label="N41\n18"]
34 [shape="circle" label="N34\n25"]
61 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">61</td><td align="left">void abort();</td></tr><tr><td align="right">62</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">63</td><td align="left">void reach_error();</td></tr><tr><td align="right">64</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">65</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">66</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">67</td><td align="left">int N = 0;</td></tr><tr><td align="right">68</td><td align="left">int main();</td></tr><tr><td align="right">69</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">20</td><td align="left">int Y;</td></tr><tr><td align="right">21</td><td align="left">int X;</td></tr><tr><td align="right">22</td><td align="left">int D;</td></tr><tr><td align="right">23</td><td align="left">int S;</td></tr><tr><td align="right">24</td><td align="left">int R;</td></tr><tr><td align="right">25</td><td align="left">int flag;</td></tr><tr><td align="right">26</td><td align="left">Y = 0;</td></tr><tr><td align="right">27</td><td align="left">while</td></tr></table>>]
61 -> 28[label=""]
29 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">29</td><td align="left">X = __VERIFIER_nondet_int();</td></tr><tr><td align="right">31</td><td align="left">int __CPAchecker_TMP_0;</td></tr></table>>]
29 -> 32[label=""]
37 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">37</td><td align="left">D = __VERIFIER_nondet_int();</td></tr><tr><td align="right">38</td><td align="left">int __CPAchecker_TMP_1;</td></tr></table>>]
37 -> 39[label=""]
44 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">44</td><td align="left">S = Y;</td></tr><tr><td align="right">45</td><td align="left">R = X - S;</td></tr><tr><td align="right">46</td><td align="left">Y = X;</td></tr></table>>]
44 -> 47[label=""]
19 -> 61 [label="INIT GLOBAL VARS" fontname="Courier New"]
28 -> 29 [label="" fontname="Courier New"]
32 -> 33 [label="[X >= -99999]" fontname="Courier New"]
32 -> 35 [label="[!(X >= -99999)]" fontname="Courier New"]
35 -> 36 [label="__CPAchecker_TMP_0 = 0;" fontname="Courier New"]
100001 [shape="component" label="assume_abort_if_not"]
36 -> 100001 [label="assume_abort_if_not(__CPAchecker_TMP_0);" fontname="Courier New"]
100001 -> 37 [label="" fontname="Courier New"]
39 -> 40 [label="[D >= 0]" fontname="Courier New"]
39 -> 42 [label="[!(D >= 0)]" fontname="Courier New"]
42 -> 43 [label="__CPAchecker_TMP_1 = 0;" fontname="Courier New"]
100002 [shape="component" label="assume_abort_if_not"]
43 -> 100002 [label="assume_abort_if_not(__CPAchecker_TMP_1);" fontname="Courier New"]
100002 -> 44 [label="" fontname="Courier New"]
47 -> 49 [label="[R <= (-D)]" fontname="Courier New"]
47 -> 50 [label="[!(R <= (-D))]" fontname="Courier New"]
50 -> 53 [label="[D <= R]" fontname="Courier New"]
50 -> 52 [label="[!(D <= R)]" fontname="Courier New"]
48 -> 55 [label="int __CPAchecker_TMP_2;" fontname="Courier New"]
55 -> 56 [label="[Y >= -99999]" fontname="Courier New"]
55 -> 58 [label="[!(Y >= -99999)]" fontname="Courier New"]
58 -> 59 [label="__CPAchecker_TMP_2 = 0;" fontname="Courier New"]
100003 [shape="component" label="__VERIFIER_assert"]
59 -> 100003 [label="__VERIFIER_assert(__CPAchecker_TMP_2);" fontname="Courier New"]
100003 -> 60 [label="" fontname="Courier New"]
56 -> 57 [label="[Y <= 99999]" fontname="Courier New"]
56 -> 58 [label="[!(Y <= 99999)]" fontname="Courier New"]
53 -> 54 [label="Y = S + D;" fontname="Courier New"]
49 -> 51 [label="Y = S - D;" fontname="Courier New"]
40 -> 41 [label="[D <= 16]" fontname="Courier New"]
40 -> 42 [label="[!(D <= 16)]" fontname="Courier New"]
33 -> 34 [label="[X <= 99999]" fontname="Courier New"]
33 -> 35 [label="[!(X <= 99999)]" fontname="Courier New"]
52 -> 48 [label="" fontname="Courier New"]
60 -> 28 [label="" fontname="Courier New"]
57 -> 59 [label="__CPAchecker_TMP_2 = 1;" fontname="Courier New"]
54 -> 48 [label="" fontname="Courier New"]
51 -> 48 [label="" fontname="Courier New"]
41 -> 43 [label="__CPAchecker_TMP_1 = 1;" fontname="Courier New"]
34 -> 36 [label="__CPAchecker_TMP_0 = 1;" fontname="Courier New"]
}