digraph main {
19 [shape="circle" label="N19\n34"]
46 [shape="circle" label="N46\n33"]
28 [shape="diamond" label="N28\n16"]
31 [shape="diamond" label="N31\n15"]
30 [shape="circle" label="N30\n14"]
18 [shape="circle" label="N18\n9"]
29 [shape="circle" label="N29\n13"]
33 [shape="doublecircle" label="N33\n12"]
34 [shape="circle" label="N34\n8"]
35 [shape="circle" label="N35\n11"]
44 [shape="circle" label="N44\n10"]
40 [shape="diamond" label="N40\n6"]
38 [shape="circle" label="N38\n3"]
37 [shape="circle" label="N37\n5"]
36 [shape="circle" label="N36\n1"]
43 [shape="circle" label="N43\n0"]
42 [shape="circle" label="N42\n2"]
46 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">46</td><td align="left">void abort();</td></tr><tr><td align="right">47</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">48</td><td align="left">void reach_error();</td></tr><tr><td align="right">49</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">50</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">51</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">52</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">53</td><td align="left">int main();</td></tr><tr><td align="right">54</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">20</td><td align="left">int i;</td></tr><tr><td align="right">21</td><td align="left">int n;</td></tr><tr><td align="right">22</td><td align="left">int a;</td></tr><tr><td align="right">23</td><td align="left">int b;</td></tr><tr><td align="right">24</td><td align="left">i = 0;</td></tr><tr><td align="right">25</td><td align="left">a = 0;</td></tr><tr><td align="right">26</td><td align="left">b = 0;</td></tr><tr><td align="right">27</td><td align="left">n = __VERIFIER_nondet_int();</td></tr></table>>]
46 -> 28[label=""]
34 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">34</td><td align="left">int __CPAchecker_TMP_0;</td></tr><tr><td align="right">39</td><td align="left">__CPAchecker_TMP_0 = __VERIFIER_nondet_int();</td></tr></table>>]
34 -> 40[label=""]
37 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">37</td><td align="left">a = a + 2;</td></tr><tr><td align="right">41</td><td align="left"></td></tr></table>>]
37 -> 36[label=""]
19 -> 46 [label="INIT GLOBAL VARS" fontname="Courier New"]
28 -> 31 [label="[n >= 0]" fontname="Courier New"]
28 -> 30 [label="[!(n >= 0)]" fontname="Courier New"]
30 -> 18 [label="return 0;" fontname="Courier New"]
31 -> 29 [label="[n <= 1000]" fontname="Courier New"]
31 -> 30 [label="[!(n <= 1000)]" fontname="Courier New"]
33 -> 34 [label="[i < n]" fontname="Courier New"]
33 -> 35 [label="[!(i < n)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
35 -> 100001 [label="__VERIFIER_assert(((a + b) % 2) == 0);" fontname="Courier New"]
100001 -> 44 [label="" fontname="Courier New"]
35 -> 44 [label="__VERIFIER_assert(((a + b) % 2) == 0);" fontname="Courier New"]
44 -> 18 [label="return 0;" fontname="Courier New"]
40 -> 38 [label="[__CPAchecker_TMP_0 == 0]" fontname="Courier New"]
40 -> 37 [label="[!(__CPAchecker_TMP_0 == 0)]" fontname="Courier New"]
36 -> 43 [label="i = i + 1;" fontname="Courier New"]
38 -> 42 [label="b = b + 2;" fontname="Courier New"]
29 -> 33 [label="while" fontname="Courier New"]
43 -> 33 [label="" fontname="Courier New"]
42 -> 36 [label="" fontname="Courier New"]
}