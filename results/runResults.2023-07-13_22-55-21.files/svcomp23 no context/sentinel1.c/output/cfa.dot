digraph CFA {
17 [shape="circle" label="N17\n30"]
39 [shape="circle" label="N39\n29"]
40 [shape="circle" label="N40\n28"]
41 [shape="circle" label="N41\n27"]
42 [shape="circle" label="N42\n26"]
43 [shape="circle" label="N43\n25"]
44 [shape="circle" label="N44\n24"]
45 [shape="circle" label="N45\n23"]
46 [shape="circle" label="N46\n22"]
47 [shape="circle" label="N47\n21"]
18 [shape="circle" label="N18\n20"]
19 [shape="circle" label="N19\n19"]
20 [shape="circle" label="N20\n18"]
21 [shape="circle" label="N21\n17"]
22 [shape="circle" label="N22\n16"]
23 [shape="doublecircle" label="N23\n15"]
26 [shape="diamond" label="N26\n14"]
28 [shape="circle" label="N28\n6"]
16 [shape="circle" label="N16\n5"]
30 [shape="diamond" label="N30\n13"]
29 [shape="circle" label="N29\n12"]
31 [shape="circle" label="N31\n11"]
32 [shape="circle" label="N32\n10"]
33 [shape="doublecircle" label="N33\n9"]
35 [shape="circle" label="N35\n8"]
9 [shape="circle" label="N9\n7"]
10 [shape="diamond" label="N10\n6"]
11 [shape="circle" label="N11\n1"]
8 [shape="circle" label="N8\n0"]
37 [shape="circle" label="N37\n7"]
12 [shape="circle" label="N12\n5"]
13 [shape="circle" label="N13\n4"]
1 [shape="circle" label="N1\n6"]
2 [shape="circle" label="N2\n5"]
3 [shape="circle" label="N3\n4"]
6 [shape="circle" label="N6\n3"]
49 [shape="circle" label="N49\n0"]
14 [shape="circle" label="N14\n3"]
48 [shape="circle" label="N48\n0"]
34 [shape="circle" label="N34\n4"]
36 [shape="circle" label="N36\n3"]
25 [shape="circle" label="N25\n2"]
27 [shape="circle" label="N27\n1"]
24 [shape="circle" label="N24\n0"]
node [shape="circle"]
subgraph cluster___VERIFIER_assert {
label="__VERIFIER_assert()"
9 -> 10 [label="Function start dummy edge"]
10 -> 12 [label="[cond == 0]"]
10 -> 11 [label="[!(cond == 0)]"]
11 -> 8 [label="default return"]
12 -> 13 [label="Label: ERROR"]
13 -> 14 [label="reach_error();" style="dotted" arrowhead="empty"]
13 -> 14 [label="reach_error();"]
14 -> 48 [label="abort();"]}
subgraph cluster_main {
label="main()"
17 -> 39 [label="INIT GLOBAL VARS"]
39 -> 40 [label="void abort();"]
40 -> 41 [label="void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function);"]
41 -> 42 [label="void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function);"]
42 -> 43 [label="void __assert(const char *__assertion, const char *__file, int __line);"]
43 -> 44 [label="void reach_error();"]
44 -> 45 [label="int __VERIFIER_nondet_int();"]
45 -> 46 [label="void __VERIFIER_assert(int cond);"]
46 -> 47 [label="int main();"]
47 -> 18 [label="Function start dummy edge"]
18 -> 19 [label="int a[100000];"]
19 -> 20 [label="int marker = 42;"]
20 -> 21 [label="int pos = 543;"]
21 -> 22 [label="for"]
22 -> 23 [label="int i = 0;"]
23 -> 25 [label="[i < 100000]"]
23 -> 26 [label="[!(i < 100000)]"]
26 -> 30 [label="[pos >= 0]"]
26 -> 28 [label="[!(pos >= 0)]"]
28 -> 16 [label="return 0;"]
30 -> 29 [label="[pos < 100000]"]
30 -> 28 [label="[!(pos < 100000)]"]
29 -> 31 [label="a[pos] = marker;"]
31 -> 32 [label="int i__1 = 0;"]
32 -> 33 [label="while"]
33 -> 34 [label="[(a[i__1]) != marker]"]
33 -> 35 [label="[!((a[i__1]) != marker)]"]
35 -> 37 [label="__VERIFIER_assert(i__1 == pos);" style="dotted" arrowhead="empty"]
35 -> 37 [label="__VERIFIER_assert(i__1 == pos);"]
37 -> 28 [label=""]
34 -> 36 [label="i__1 = i__1 + 1;"]
36 -> 33 [label=""]
25 -> 27 [label="a[i] = 41;"]
27 -> 24 [label=""]
24 -> 23 [label="i = i + 1;"]}
subgraph cluster_reach_error {
label="reach_error()"
1 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="4UL;"]
3 -> 6 [label=""]
6 -> 49 [label="__assert_fail(\"0\", \"standard_sentinel-2.c\", 3, \"__PRETTY_FUNCTION__\");"]}
35 -> 9 [label="__VERIFIER_assert(i__1 == pos)"]
8 -> 37 [label="Return edge from __VERIFIER_assert to main: __VERIFIER_assert(i__1 == pos);"]
13 -> 1 [label="reach_error()"]}