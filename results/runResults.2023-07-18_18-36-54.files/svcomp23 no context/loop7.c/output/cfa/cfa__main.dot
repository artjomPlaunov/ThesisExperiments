digraph main {
19 [shape="circle" label="N19\n26"]
36 [shape="circle" label="N36\n25"]
24 [shape="doublecircle" label="N24\n12"]
26 [shape="circle" label="N26\n2"]
27 [shape="circle" label="N27\n11"]
31 [shape="doublecircle" label="N31\n8"]
33 [shape="circle" label="N33\n4"]
34 [shape="circle" label="N34\n7"]
35 [shape="circle" label="N35\n6"]
18 [shape="circle" label="N18\n5"]
28 [shape="circle" label="N28\n1"]
36 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">36</td><td align="left">void abort();</td></tr><tr><td align="right">37</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">38</td><td align="left">void reach_error();</td></tr><tr><td align="right">39</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">40</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">41</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">42</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">43</td><td align="left">int main();</td></tr><tr><td align="right">44</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">20</td><td align="left">int A[1024];</td></tr><tr><td align="right">21</td><td align="left">int i;</td></tr><tr><td align="right">22</td><td align="left">for</td></tr><tr><td align="right">23</td><td align="left">i = 0;</td></tr></table>>]
36 -> 24[label=""]
27 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">27</td><td align="left">A[1023] = 0;</td></tr><tr><td align="right">29</td><td align="left">for</td></tr><tr><td align="right">30</td><td align="left">i = 0;</td></tr></table>>]
27 -> 31[label=""]
33 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">33</td><td align="left"></td></tr><tr><td align="right">32</td><td align="left">i = i + 1;</td></tr></table>>]
33 -> 31[label=""]
28 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">28</td><td align="left"></td></tr><tr><td align="right">25</td><td align="left">i = i + 1;</td></tr></table>>]
28 -> 24[label=""]
19 -> 36 [label="INIT GLOBAL VARS" fontname="Courier New"]
24 -> 26 [label="[i < 1023]" fontname="Courier New"]
24 -> 27 [label="[!(i < 1023)]" fontname="Courier New"]
31 -> 33 [label="[(A[i]) != 0]" fontname="Courier New"]
31 -> 34 [label="[!((A[i]) != 0)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
34 -> 100001 [label="__VERIFIER_assert(i <= 1024);" fontname="Courier New"]
100001 -> 35 [label="" fontname="Courier New"]
34 -> 35 [label="__VERIFIER_assert(i <= 1024);" fontname="Courier New"]
35 -> 18 [label="default return" fontname="Courier New"]
26 -> 28 [label="A[i] = __VERIFIER_nondet_int();" fontname="Courier New"]
}