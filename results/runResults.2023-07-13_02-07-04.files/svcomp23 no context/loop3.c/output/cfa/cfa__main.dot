digraph main {
23 [shape="circle" label="N23\n18"]
31 [shape="circle" label="N31\n17"]
26 [shape="doublecircle" label="N26\n5"]
27 [shape="circle" label="N27\n1"]
28 [shape="circle" label="N28\n4"]
30 [shape="circle" label="N30\n3"]
22 [shape="circle" label="N22\n2"]
29 [shape="circle" label="N29\n0"]
31 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">31</td><td align="left">void abort();</td></tr><tr><td align="right">32</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">33</td><td align="left">void reach_error();</td></tr><tr><td align="right">34</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">35</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">36</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">37</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">38</td><td align="left">unsigned int f(unsigned int z);</td></tr><tr><td align="right">39</td><td align="left">int main();</td></tr><tr><td align="right">40</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">24</td><td align="left">unsigned int x = 0;</td></tr><tr><td align="right">25</td><td align="left">while</td></tr></table>>]
31 -> 26[label=""]
23 -> 31 [label="INIT GLOBAL VARS" fontname="Courier New"]
26 -> 27 [label="[x < 268435455]" fontname="Courier New"]
26 -> 28 [label="[!(x < 268435455)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
28 -> 100001 [label="__VERIFIER_assert(0 == (x % 2));" fontname="Courier New"]
100001 -> 30 [label="" fontname="Courier New"]
28 -> 30 [label="__VERIFIER_assert(0 == (x % 2));" fontname="Courier New"]
30 -> 22 [label="default return" fontname="Courier New"]
100002 [shape="component" label="f"]
27 -> 100002 [label="x = f(x);" fontname="Courier New"]
100002 -> 29 [label="" fontname="Courier New"]
27 -> 29 [label="x = f(x);" fontname="Courier New"]
29 -> 26 [label="" fontname="Courier New"]
}