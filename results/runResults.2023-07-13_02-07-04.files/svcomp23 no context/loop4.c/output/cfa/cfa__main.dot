digraph main {
19 [shape="circle" label="N19\n33"]
45 [shape="circle" label="N45\n32"]
25 [shape="doublecircle" label="N25\n18"]
26 [shape="diamond" label="N26\n17"]
29 [shape="circle" label="N29\n12"]
30 [shape="circle" label="N30\n16"]
28 [shape="diamond" label="N28\n8"]
38 [shape="circle" label="N38\n3"]
37 [shape="circle" label="N37\n7"]
27 [shape="circle" label="N27\n2"]
43 [shape="circle" label="N43\n1"]
18 [shape="circle" label="N18\n0"]
45 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">45</td><td align="left">void abort();</td></tr><tr><td align="right">46</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">47</td><td align="left">void reach_error();</td></tr><tr><td align="right">48</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">49</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">50</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">51</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">52</td><td align="left">int main();</td></tr><tr><td align="right">53</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">20</td><td align="left">int x;</td></tr><tr><td align="right">21</td><td align="left">int y;</td></tr><tr><td align="right">22</td><td align="left">x = 0;</td></tr><tr><td align="right">23</td><td align="left">y = 0;</td></tr><tr><td align="right">24</td><td align="left">while</td></tr></table>>]
45 -> 25[label=""]
30 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">30</td><td align="left">int __CPAchecker_TMP_1 = y;</td></tr><tr><td align="right">34</td><td align="left">y = y - 1;</td></tr><tr><td align="right">35</td><td align="left">__CPAchecker_TMP_1;</td></tr><tr><td align="right">36</td><td align="left"></td></tr></table>>]
30 -> 28[label=""]
37 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">37</td><td align="left">int __CPAchecker_TMP_2 = x;</td></tr><tr><td align="right">40</td><td align="left">x = x + 1;</td></tr><tr><td align="right">41</td><td align="left">__CPAchecker_TMP_2;</td></tr><tr><td align="right">42</td><td align="left"></td></tr></table>>]
37 -> 25[label=""]
29 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">29</td><td align="left">int __CPAchecker_TMP_0 = y;</td></tr><tr><td align="right">31</td><td align="left">y = y + 1;</td></tr><tr><td align="right">32</td><td align="left">__CPAchecker_TMP_0;</td></tr><tr><td align="right">33</td><td align="left"></td></tr></table>>]
29 -> 28[label=""]
19 -> 45 [label="INIT GLOBAL VARS" fontname="Courier New"]
25 -> 26 [label="" fontname="Courier New"]
26 -> 29 [label="[x < 50]" fontname="Courier New"]
26 -> 30 [label="[!(x < 50)]" fontname="Courier New"]
28 -> 38 [label="[y < 0]" fontname="Courier New"]
28 -> 37 [label="[!(y < 0)]" fontname="Courier New"]
38 -> 27 [label="break" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
27 -> 100001 [label="__VERIFIER_assert(x == 100);" fontname="Courier New"]
100001 -> 43 [label="" fontname="Courier New"]
27 -> 43 [label="__VERIFIER_assert(x == 100);" fontname="Courier New"]
43 -> 18 [label="return 0;" fontname="Courier New"]
}