digraph main {
19 [shape="circle" label="N19\n28"]
38 [shape="circle" label="N38\n27"]
25 [shape="doublecircle" label="N25\n12"]
26 [shape="circle" label="N26\n7"]
27 [shape="circle" label="N27\n11"]
35 [shape="circle" label="N35\n10"]
36 [shape="circle" label="N36\n9"]
18 [shape="circle" label="N18\n8"]
32 [shape="diamond" label="N32\n5"]
30 [shape="circle" label="N30\n2"]
29 [shape="circle" label="N29\n4"]
28 [shape="circle" label="N28\n0"]
38 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">38</td><td align="left">void abort();</td></tr><tr><td align="right">39</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">40</td><td align="left">void reach_error();</td></tr><tr><td align="right">41</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">42</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">43</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">44</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">45</td><td align="left">int SIZE = 50000001;</td></tr><tr><td align="right">46</td><td align="left">int main();</td></tr><tr><td align="right">47</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">20</td><td align="left">int i;</td></tr><tr><td align="right">21</td><td align="left">int j;</td></tr><tr><td align="right">22</td><td align="left">i = 0;</td></tr><tr><td align="right">23</td><td align="left">j = 0;</td></tr><tr><td align="right">24</td><td align="left">while</td></tr></table>>]
38 -> 25[label=""]
26 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">26</td><td align="left">int __CPAchecker_TMP_0;</td></tr><tr><td align="right">31</td><td align="left">__CPAchecker_TMP_0 = __VERIFIER_nondet_int();</td></tr></table>>]
26 -> 32[label=""]
29 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">29</td><td align="left">i = i + 8;</td></tr><tr><td align="right">33</td><td align="left"></td></tr></table>>]
29 -> 28[label=""]
30 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">30</td><td align="left">i = i + 4;</td></tr><tr><td align="right">34</td><td align="left"></td></tr></table>>]
30 -> 28[label=""]
19 -> 38 [label="INIT GLOBAL VARS" fontname="Courier New"]
25 -> 26 [label="[i < SIZE]" fontname="Courier New"]
25 -> 27 [label="[!(i < SIZE)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
35 -> 100001 [label="__VERIFIER_assert(((j * 4) % 4) == (i % 4));" fontname="Courier New"]
100001 -> 36 [label="" fontname="Courier New"]
35 -> 36 [label="__VERIFIER_assert(((j * 4) % 4) == (i % 4));" fontname="Courier New"]
36 -> 18 [label="return 0;" fontname="Courier New"]
32 -> 30 [label="[__CPAchecker_TMP_0 == 0]" fontname="Courier New"]
32 -> 29 [label="[!(__CPAchecker_TMP_0 == 0)]" fontname="Courier New"]
28 -> 25 [label="" fontname="Courier New"]
27 -> 35 [label="j = i / 4;" fontname="Courier New"]
}