digraph main {
19 [shape="circle" label="N19\n49"]
57 [shape="circle" label="N57\n48"]
27 [shape="diamond" label="N27\n28"]
28 [shape="diamond" label="N28\n27"]
30 [shape="circle" label="N30\n26"]
31 [shape="circle" label="N31\n24"]
32 [shape="circle" label="N32\n23"]
33 [shape="circle" label="N33\n22"]
35 [shape="doublecircle" label="N35\n20"]
36 [shape="diamond" label="N36\n19"]
39 [shape="circle" label="N39\n9"]
40 [shape="circle" label="N40\n18"]
50 [shape="diamond" label="N50\n16"]
51 [shape="diamond" label="N51\n15"]
53 [shape="circle" label="N53\n14"]
54 [shape="circle" label="N54\n12"]
55 [shape="circle" label="N55\n11"]
18 [shape="circle" label="N18\n10"]
52 [shape="circle" label="N52\n13"]
38 [shape="diamond" label="N38\n8"]
44 [shape="circle" label="N44\n5"]
43 [shape="circle" label="N43\n7"]
42 [shape="circle" label="N42\n3"]
47 [shape="circle" label="N47\n2"]
46 [shape="circle" label="N46\n4"]
29 [shape="circle" label="N29\n25"]
57 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">57</td><td align="left">void abort();</td></tr><tr><td align="right">58</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">59</td><td align="left">void reach_error();</td></tr><tr><td align="right">60</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">61</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">62</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">63</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">64</td><td align="left">int flag = 0;</td></tr><tr><td align="right">65</td><td align="left">int i = 0;</td></tr><tr><td align="right">66</td><td align="left">int n = 0;</td></tr><tr><td align="right">67</td><td align="left">int p = 0;</td></tr><tr><td align="right">68</td><td align="left">void main();</td></tr><tr><td align="right">69</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">20</td><td align="left">flag = __VERIFIER_nondet_int();</td></tr><tr><td align="right">21</td><td align="left">i = __VERIFIER_nondet_int();</td></tr><tr><td align="right">22</td><td align="left">n = __VERIFIER_nondet_int();</td></tr><tr><td align="right">23</td><td align="left">p = __VERIFIER_nondet_int();</td></tr><tr><td align="right">24</td><td align="left">p = 0;</td></tr><tr><td align="right">25</td><td align="left">n = __VERIFIER_nondet_int();</td></tr><tr><td align="right">26</td><td align="left">int __CPAchecker_TMP_0;</td></tr></table>>]
57 -> 27[label=""]
33 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">33</td><td align="left">i = 0;</td></tr><tr><td align="right">34</td><td align="left">while</td></tr></table>>]
33 -> 35[label=""]
40 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">40</td><td align="left">break</td></tr><tr><td align="right">37</td><td align="left">int __CPAchecker_TMP_2;</td></tr></table>>]
40 -> 50[label=""]
43 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">43</td><td align="left">p = p + 16;</td></tr><tr><td align="right">45</td><td align="left"></td></tr></table>>]
43 -> 42[label=""]
47 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">47</td><td align="left">i = i + 1;</td></tr><tr><td align="right">48</td><td align="left">__CPAchecker_TMP_1;</td></tr><tr><td align="right">49</td><td align="left"></td></tr></table>>]
47 -> 35[label=""]
19 -> 57 [label="INIT GLOBAL VARS" fontname="Courier New"]
27 -> 28 [label="[n >= 100]" fontname="Courier New"]
27 -> 30 [label="[!(n >= 100)]" fontname="Courier New"]
30 -> 31 [label="__CPAchecker_TMP_0 = 0;" fontname="Courier New"]
100001 [shape="component" label="assume_abort_if_not"]
31 -> 100001 [label="assume_abort_if_not(__CPAchecker_TMP_0);" fontname="Courier New"]
100001 -> 32 [label="" fontname="Courier New"]
31 -> 32 [label="assume_abort_if_not(__CPAchecker_TMP_0);" fontname="Courier New"]
32 -> 33 [label="flag = __VERIFIER_nondet_int();" fontname="Courier New"]
35 -> 36 [label="" fontname="Courier New"]
36 -> 39 [label="[i < n]" fontname="Courier New"]
36 -> 40 [label="[!(i < n)]" fontname="Courier New"]
50 -> 51 [label="[p >= 1600]" fontname="Courier New"]
50 -> 53 [label="[!(p >= 1600)]" fontname="Courier New"]
53 -> 54 [label="__CPAchecker_TMP_2 = 0;" fontname="Courier New"]
100002 [shape="component" label="__VERIFIER_assert"]
54 -> 100002 [label="__VERIFIER_assert(__CPAchecker_TMP_2);" fontname="Courier New"]
100002 -> 55 [label="" fontname="Courier New"]
54 -> 55 [label="__VERIFIER_assert(__CPAchecker_TMP_2);" fontname="Courier New"]
55 -> 18 [label="return;" fontname="Courier New"]
51 -> 52 [label="[p <= 32000]" fontname="Courier New"]
51 -> 53 [label="[!(p <= 32000)]" fontname="Courier New"]
39 -> 38 [label="" fontname="Courier New"]
38 -> 44 [label="[flag == 0]" fontname="Courier New"]
38 -> 43 [label="[!(flag == 0)]" fontname="Courier New"]
42 -> 47 [label="int __CPAchecker_TMP_1 = i;" fontname="Courier New"]
44 -> 46 [label="p = p + 32;" fontname="Courier New"]
28 -> 29 [label="[n <= 1000]" fontname="Courier New"]
28 -> 30 [label="[!(n <= 1000)]" fontname="Courier New"]
52 -> 54 [label="__CPAchecker_TMP_2 = 1;" fontname="Courier New"]
46 -> 42 [label="" fontname="Courier New"]
29 -> 31 [label="__CPAchecker_TMP_0 = 1;" fontname="Courier New"]
}