digraph main {
19 [shape="circle" label="N19\n32"]
42 [shape="circle" label="N42\n31"]
25 [shape="doublecircle" label="N25\n17"]
27 [shape="circle" label="N27\n2"]
28 [shape="circle" label="N28\n16"]
31 [shape="doublecircle" label="N31\n14"]
33 [shape="diamond" label="N33\n11"]
34 [shape="circle" label="N34\n13"]
36 [shape="circle" label="N36\n6"]
37 [shape="circle" label="N37\n10"]
39 [shape="circle" label="N39\n9"]
40 [shape="circle" label="N40\n8"]
41 [shape="circle" label="N41\n7"]
35 [shape="circle" label="N35\n4"]
32 [shape="circle" label="N32\n3"]
38 [shape="circle" label="N38\n5"]
29 [shape="circle" label="N29\n1"]
18 [shape="circle" label="N18\n12"]
42 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">42</td><td align="left">void abort();</td></tr><tr><td align="right">43</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">44</td><td align="left">void reach_error();</td></tr><tr><td align="right">45</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">46</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">47</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">48</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">49</td><td align="left">int main();</td></tr><tr><td align="right">50</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">20</td><td align="left">unsigned int array[1000];</td></tr><tr><td align="right">21</td><td align="left">unsigned int index;</td></tr><tr><td align="right">22</td><td align="left">unsigned int flag;</td></tr><tr><td align="right">23</td><td align="left">for</td></tr><tr><td align="right">24</td><td align="left">index = 0;</td></tr></table>>]
42 -> 25[label=""]
28 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">28</td><td align="left">for</td></tr><tr><td align="right">30</td><td align="left">index = 0;</td></tr></table>>]
28 -> 31[label=""]
29 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">29</td><td align="left"></td></tr><tr><td align="right">26</td><td align="left">index = index + 1;</td></tr></table>>]
29 -> 25[label=""]
19 -> 42 [label="INIT GLOBAL VARS" fontname="Courier New"]
25 -> 27 [label="[index < 1000]" fontname="Courier New"]
25 -> 28 [label="[!(index < 1000)]" fontname="Courier New"]
31 -> 33 [label="[index < 1000]" fontname="Courier New"]
31 -> 34 [label="[!(index < 1000)]" fontname="Courier New"]
33 -> 36 [label="[(index % 2) == 0]" fontname="Courier New"]
33 -> 37 [label="[!((index % 2) == 0)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
37 -> 100001 [label="__VERIFIER_assert(flag == 0);" fontname="Courier New"]
100001 -> 39 [label="" fontname="Courier New"]
37 -> 39 [label="__VERIFIER_assert(flag == 0);" fontname="Courier New"]
39 -> 40 [label="flag = array[index];" fontname="Courier New"]
100002 [shape="component" label="__VERIFIER_assert"]
40 -> 100002 [label="__VERIFIER_assert(flag == 1);" fontname="Courier New"]
100002 -> 41 [label="" fontname="Courier New"]
40 -> 41 [label="__VERIFIER_assert(flag == 1);" fontname="Courier New"]
41 -> 35 [label="" fontname="Courier New"]
35 -> 32 [label="" fontname="Courier New"]
36 -> 38 [label="flag = array[index];" fontname="Courier New"]
27 -> 29 [label="array[index] = index % 2;" fontname="Courier New"]
34 -> 18 [label="default return" fontname="Courier New"]
32 -> 31 [label="index = index + 1;" fontname="Courier New"]
38 -> 35 [label="" fontname="Courier New"]
}