<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
  <default>false</default>
 </key>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>context/loop2.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">correctness_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 2.2 / svcomp23</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(reach_error())) )</data>
  <data key="programfile">context/loop2.c</data>
  <data key="programhash">3ccfd3fae6e4bc2345935c94cf11964155de105b1cd02a0db01310c5f45fcd5a</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2023-06-28T03:50:05-04:00</data>
  <node id="N14">
   <data key="entry">true</data>
  </node>
  <node id="N15"/>
  <edge source="N14" target="N15">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="N20"/>
  <edge source="N15" target="N20">
   <data key="enterLoopHead">true</data>
   <data key="startline">22</data>
   <data key="endline">22</data>
  </edge>
  <node id="N22"/>
  <edge source="N20" target="N22">
   <data key="startline">22</data>
   <data key="endline">22</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N23"/>
  <edge source="N20" target="N23">
   <data key="startline">22</data>
   <data key="endline">22</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N26"/>
  <edge source="N23" target="N26">
   <data key="enterLoopHead">true</data>
   <data key="startline">26</data>
   <data key="endline">26</data>
  </edge>
  <node id="N28"/>
  <edge source="N26" target="N28">
   <data key="startline">26</data>
   <data key="endline">26</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N29"/>
  <edge source="N26" target="N29">
   <data key="startline">26</data>
   <data key="endline">26</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N32"/>
  <edge source="N28" target="N32">
   <data key="startline">27</data>
   <data key="endline">27</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N38"/>
  <edge source="N28" target="N38">
   <data key="startline">27</data>
   <data key="endline">27</data>
   <data key="control">condition-true</data>
  </edge>
  <edge source="N38" target="N26">
   <data key="enterLoopHead">true</data>
   <data key="startline">26</data>
   <data key="endline">26</data>
  </edge>
  <node id="N5"/>
  <edge source="N32" target="N5">
   <data key="startline">31</data>
   <data key="endline">31</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="N8"/>
  <edge source="N5" target="N8">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="N7"/>
  <edge source="N5" target="N7">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="N4"/>
  <edge source="N7" target="N4">
   <data key="startline">13</data>
   <data key="endline">13</data>
   <data key="returnFrom">__VERIFIER_assert</data>
  </edge>
  <edge source="N4" target="N38">
   <data key="startline">34</data>
   <data key="endline">34</data>
  </edge>
  <node id="N35"/>
  <edge source="N4" target="N35">
   <data key="startline">31</data>
   <data key="endline">31</data>
  </edge>
  <edge source="N35" target="N5">
   <data key="startline">34</data>
   <data key="endline">34</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="N1"/>
  <edge source="N8" target="N1">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="enterFunction">reach_error</data>
  </edge>
  <node id="N10"/>
  <edge source="N1" target="N10">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="returnFrom">reach_error</data>
  </edge>
  <edge source="N22" target="N20">
   <data key="enterLoopHead">true</data>
   <data key="startline">22</data>
   <data key="endline">22</data>
  </edge>
 </graph>
</graphml>
