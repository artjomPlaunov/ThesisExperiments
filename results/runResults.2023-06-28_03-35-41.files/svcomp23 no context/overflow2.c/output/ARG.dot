digraph ARG {
node [style="filled" shape="box" color="white"]
1334 [fillcolor="cornflowerblue" label="1334 @ N19\nmain entry\nAbstractionState: ABS2: true\n" id="1334"]
1358 [label="1358 @ N36\nmain\n" id="1358"]
1359 [label="1359 @ N24\nmain\n" id="1359"]
1361 [fillcolor="cornflowerblue" label="1361 @ N25\nmain\nAbstractionState: ABS7: true\n" id="1361"]
1366 [label="1366 @ N27\nmain\n" id="1366"]
1367 [label="1367 @ N18\nmain exit\n" id="1367"]
1362 [label="1362 @ N28\nmain\n" id="1362"]
1364 [label="1364 @ N26\nmain\n" id="1364"]
1369 [fillcolor="cornflowerblue" label="1369 @ N29\nmain\nAbstractionState: ABS8: true\n" id="1369"]
1371 [label="1371 @ N31\nmain\n" id="1371"]
1373 [fillcolor="green" label="1373 @ N25\nmain\nAbstractionState: ABS9: true\n" id="1373"]
1370 [label="1370 @ N30\nmain\n" id="1370"]
1374 [label="1374 @ N11\n__VERIFIER_assert entry\n" id="1374"]
1375 [label="1375 @ N12\n__VERIFIER_assert\n" id="1375"]
1377 [label="1377 @ N13\n__VERIFIER_assert\n" id="1377"]
1382 [label="1382 @ N10\n__VERIFIER_assert exit\n" id="1382"]
1383 [label="1383 @ N32\nmain\n" id="1383"]
1384 [label="1384 @ N34\nmain\n" id="1384"]
1386 [fillcolor="green" label="1386 @ N29\nmain\nAbstractionState: ABS12: true\n" id="1386"]
1376 [label="1376 @ N14\n__VERIFIER_assert\n" id="1376"]
1378 [label="1378 @ N15\n__VERIFIER_assert\n" id="1378"]
1334 -> 1358 [label="Line 0: \lINIT GLOBAL VARS\l" id="1334 -> 1358"]
1358 -> 1359 [label="Lines 5 - 18: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lint __VERIFIER_nondet_int();\lint main();\lFunction start dummy edge\lint x;\lint y;\lx = __VERIFIER_nondet_int();\ly = __VERIFIER_nondet_int();\l" id="1358 -> 1359"]
1359 -> 1361 [label="Line 20: \lwhile\l" id="1359 -> 1361"]
1373 -> 1361 [style="dashed" weight="0" label="covered by"]
1361 -> 1362 [label="Line 20: \l[x == y]\l" id="1361 -> 1362"]
1361 -> 1366 [label="Line 20: \l[!(x == y)]\l" id="1361 -> 1366"]
1366 -> 1367 [label="Line 28: \lreturn 0;\l" id="1366 -> 1367"]
1362 -> 1364 [label="Line 20: \l[x > 0]\l" id="1362 -> 1364"]
1362 -> 1366 [label="Line 20: \l[!(x > 0)]\l" id="1362 -> 1366"]
1364 -> 1369 [label="Line 21: \lwhile\l" id="1364 -> 1369"]
1386 -> 1369 [style="dashed" weight="0" label="covered by"]
1369 -> 1370 [label="Line 21: \l[y > 0]\l" id="1369 -> 1370"]
1369 -> 1371 [label="Line 21: \l[!(y > 0)]\l" id="1369 -> 1371"]
1371 -> 1373 [label="Line 0: \l\l" id="1371 -> 1373"]
1370 -> 1374 [label="Line 22: \l__VERIFIER_assert(-2147483648LL <= (x - 1))\l" id="1370 -> 1374"]
1374 -> 1375 [label="Line 0: \lFunction start dummy edge\l" id="1374 -> 1375"]
1375 -> 1376 [label="Line 11: \l[cond == 0]\l" id="1375 -> 1376"]
1375 -> 1377 [label="Line 11: \l[!(cond == 0)]\l" id="1375 -> 1377"]
1377 -> 1382 [label="Line 0: \ldefault return\l" id="1377 -> 1382"]
1382 -> 1383 [label="Line 22: \lReturn edge from __VERIFIER_assert to main: __VERIFIER_assert(-2147483648LL <= (x - 1));\l" id="1382 -> 1383"]
1383 -> 1384 [label="Lines 23 - 24: \lx = x - 1;\ly = y - 1;\l" id="1383 -> 1384"]
1384 -> 1386 [label="Line 0: \l\l" id="1384 -> 1386"]
1376 -> 1378 [label="Line 11: \lLabel: ERROR\l" id="1376 -> 1378"]
}
