digraph CFA {
8 [shape="circle" label="N8\n37"]
38 [shape="circle" label="N38\n36"]
39 [shape="circle" label="N39\n35"]
40 [shape="circle" label="N40\n34"]
41 [shape="circle" label="N41\n33"]
42 [shape="circle" label="N42\n32"]
43 [shape="circle" label="N43\n31"]
44 [shape="circle" label="N44\n30"]
45 [shape="circle" label="N45\n29"]
46 [shape="circle" label="N46\n28"]
9 [shape="circle" label="N9\n27"]
10 [shape="circle" label="N10\n26"]
11 [shape="circle" label="N11\n25"]
12 [shape="circle" label="N12\n24"]
13 [shape="circle" label="N13\n23"]
14 [shape="circle" label="N14\n22"]
15 [shape="circle" label="N15\n21"]
16 [shape="circle" label="N16\n20"]
17 [shape="doublecircle" label="N17\n19"]
18 [shape="diamond" label="N18\n18"]
22 [shape="circle" label="N22\n17"]
19 [shape="circle" label="N19\n16"]
32 [shape="diamond" label="N32\n15"]
35 [shape="circle" label="N35\n14"]
1 [shape="circle" label="N1\n4"]
2 [shape="circle" label="N2\n3"]
4 [shape="circle" label="N4\n2"]
5 [shape="circle" label="N5\n1"]
0 [shape="circle" label="N0\n0"]
36 [shape="circle" label="N36\n13"]
33 [shape="circle" label="N33\n11"]
7 [shape="circle" label="N7\n10"]
34 [shape="circle" label="N34\n12"]
21 [shape="circle" label="N21\n9"]
20 [shape="diamond" label="N20\n8"]
24 [shape="circle" label="N24\n3"]
29 [shape="circle" label="N29\n2"]
30 [shape="circle" label="N30\n1"]
31 [shape="circle" label="N31\n0"]
25 [shape="diamond" label="N25\n7"]
26 [shape="circle" label="N26\n6"]
27 [shape="circle" label="N27\n5"]
28 [shape="circle" label="N28\n4"]
node [shape="circle"]
subgraph cluster_error {
label="error()"
1 -> 2 [label="Function start dummy edge"]
2 -> 4 [label="Goto: ERROR"]
4 -> 5 [label="Label: ERROR"]
5 -> 0 [label="return;"]}
subgraph cluster_main {
label="main()"
8 -> 38 [label="INIT GLOBAL VARS"]
38 -> 39 [label="int __VERIFIER_nondet_int();"]
39 -> 40 [label="int modFlag = 0;"]
40 -> 41 [label="int res = 0;"]
41 -> 42 [label="int n1 = 0;"]
42 -> 43 [label="int n2 = 0;"]
43 -> 44 [label="int bound = 0;"]
44 -> 45 [label="void error();"]
45 -> 46 [label="int main();"]
46 -> 9 [label="Function start dummy edge"]
9 -> 10 [label="modFlag = __VERIFIER_nondet_int();"]
10 -> 11 [label="res = __VERIFIER_nondet_int();"]
11 -> 12 [label="int n1__1 = 432;"]
12 -> 13 [label="int n2__1 = 4325;"]
13 -> 14 [label="res = 0;"]
14 -> 15 [label="bound = __VERIFIER_nondet_int();"]
15 -> 16 [label="int i = 0;"]
16 -> 17 [label="while"]
17 -> 18 [label=""]
18 -> 21 [label="[i < bound]"]
18 -> 22 [label="[!(i < bound)]"]
22 -> 19 [label="break"]
19 -> 32 [label="modFlag = res;"]
32 -> 34 [label="[(modFlag % 1868400) == 0]"]
32 -> 35 [label="[!((modFlag % 1868400) == 0)]"]
35 -> 36 [label="error();" style="dotted" arrowhead="empty"]
35 -> 36 [label="error();"]
36 -> 33 [label=""]
33 -> 7 [label="return 0;"]
34 -> 33 [label=""]
21 -> 20 [label=""]
20 -> 25 [label="[(i % n1__1) == 0]"]
20 -> 24 [label="[!((i % n1__1) == 0)]"]
24 -> 29 [label="int __CPAchecker_TMP_0 = i;"]
29 -> 30 [label="i = i + 1;"]
30 -> 31 [label="__CPAchecker_TMP_0;"]
31 -> 17 [label=""]
25 -> 27 [label="[(i % n2__1) == 0]"]
25 -> 26 [label="[!((i % n2__1) == 0)]"]
26 -> 24 [label=""]
27 -> 28 [label="res = i;"]
28 -> 24 [label=""]}
35 -> 1 [label="error()"]
0 -> 36 [label="Return edge from error to main: error();"]}