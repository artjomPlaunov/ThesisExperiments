digraph main {
14 [shape="circle" label="N14\n29"]
37 [shape="circle" label="N37\n28"]
20 [shape="doublecircle" label="N20\n17"]
22 [shape="circle" label="N22\n2"]
23 [shape="circle" label="N23\n16"]
26 [shape="doublecircle" label="N26\n14"]
28 [shape="diamond" label="N28\n11"]
29 [shape="circle" label="N29\n13"]
31 [shape="circle" label="N31\n6"]
32 [shape="circle" label="N32\n10"]
34 [shape="circle" label="N34\n9"]
35 [shape="circle" label="N35\n8"]
36 [shape="circle" label="N36\n7"]
30 [shape="circle" label="N30\n4"]
27 [shape="circle" label="N27\n3"]
33 [shape="circle" label="N33\n5"]
24 [shape="circle" label="N24\n1"]
13 [shape="circle" label="N13\n12"]
37 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">37</td><td align="left">void abort();</td></tr><tr><td align="right">38</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">39</td><td align="left">void reach_error();</td></tr><tr><td align="right">40</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">41</td><td align="left">int main();</td></tr><tr><td align="right">42</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">15</td><td align="left">unsigned int array[1000];</td></tr><tr><td align="right">16</td><td align="left">unsigned int index;</td></tr><tr><td align="right">17</td><td align="left">unsigned int flag;</td></tr><tr><td align="right">18</td><td align="left">for</td></tr><tr><td align="right">19</td><td align="left">index = 0;</td></tr></table>>]
37 -> 20[label=""]
23 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">23</td><td align="left">for</td></tr><tr><td align="right">25</td><td align="left">index = 0;</td></tr></table>>]
23 -> 26[label=""]
24 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">24</td><td align="left"></td></tr><tr><td align="right">21</td><td align="left">index = index + 1;</td></tr></table>>]
24 -> 20[label=""]
14 -> 37 [label="INIT GLOBAL VARS" fontname="Courier New"]
20 -> 22 [label="[index < 1000]" fontname="Courier New"]
20 -> 23 [label="[!(index < 1000)]" fontname="Courier New"]
26 -> 28 [label="[index < 1000]" fontname="Courier New"]
26 -> 29 [label="[!(index < 1000)]" fontname="Courier New"]
28 -> 31 [label="[(index % 2) == 0]" fontname="Courier New"]
28 -> 32 [label="[!((index % 2) == 0)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
32 -> 100001 [label="__VERIFIER_assert(flag == 0);" fontname="Courier New"]
100001 -> 34 [label="" fontname="Courier New"]
32 -> 34 [label="__VERIFIER_assert(flag == 0);" fontname="Courier New"]
34 -> 35 [label="flag = array[index];" fontname="Courier New"]
100002 [shape="component" label="__VERIFIER_assert"]
35 -> 100002 [label="__VERIFIER_assert(flag == 1);" fontname="Courier New"]
100002 -> 36 [label="" fontname="Courier New"]
35 -> 36 [label="__VERIFIER_assert(flag == 1);" fontname="Courier New"]
36 -> 30 [label="" fontname="Courier New"]
30 -> 27 [label="" fontname="Courier New"]
31 -> 33 [label="flag = array[index];" fontname="Courier New"]
22 -> 24 [label="array[index] = index % 2;" fontname="Courier New"]
29 -> 13 [label="default return" fontname="Courier New"]
27 -> 26 [label="index = index + 1;" fontname="Courier New"]
33 -> 30 [label="" fontname="Courier New"]
}