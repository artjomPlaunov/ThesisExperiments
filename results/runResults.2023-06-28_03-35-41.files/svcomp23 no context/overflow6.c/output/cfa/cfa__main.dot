digraph main {
15 [shape="circle" label="N15\n26"]
35 [shape="circle" label="N35\n25"]
20 [shape="diamond" label="N20\n12"]
23 [shape="diamond" label="N23\n11"]
22 [shape="circle" label="N22\n10"]
14 [shape="circle" label="N14\n0"]
21 [shape="circle" label="N21\n9"]
25 [shape="doublecircle" label="N25\n8"]
26 [shape="circle" label="N26\n7"]
27 [shape="circle" label="N27\n2"]
33 [shape="circle" label="N33\n1"]
29 [shape="diamond" label="N29\n5"]
31 [shape="circle" label="N31\n3"]
30 [shape="circle" label="N30\n4"]
35 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">35</td><td align="left">void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function);</td></tr><tr><td align="right">36</td><td align="left">void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function);</td></tr><tr><td align="right">37</td><td align="left">void __assert(const char *__assertion, const char *__file, int __line);</td></tr><tr><td align="right">38</td><td align="left">void reach_error();</td></tr><tr><td align="right">39</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">40</td><td align="left">_Bool __VERIFIER_nondet_bool();</td></tr><tr><td align="right">41</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">42</td><td align="left">int main();</td></tr><tr><td align="right">43</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">16</td><td align="left">int i;</td></tr><tr><td align="right">17</td><td align="left">i = __VERIFIER_nondet_int();</td></tr><tr><td align="right">18</td><td align="left">int c;</td></tr><tr><td align="right">19</td><td align="left">c = __VERIFIER_nondet_int();</td></tr></table>>]
35 -> 20[label=""]
26 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">26</td><td align="left">c = c + i;</td></tr><tr><td align="right">28</td><td align="left">i = i + 1;</td></tr></table>>]
26 -> 29[label=""]
15 -> 35 [label="INIT GLOBAL VARS" fontname="Courier New"]
20 -> 23 [label="[c == 0]" fontname="Courier New"]
20 -> 22 [label="[!(c == 0)]" fontname="Courier New"]
22 -> 14 [label="return 0;" fontname="Courier New"]
23 -> 21 [label="[i == 0]" fontname="Courier New"]
23 -> 22 [label="[!(i == 0)]" fontname="Courier New"]
25 -> 26 [label="[i < 100]" fontname="Courier New"]
25 -> 27 [label="[!(i < 100)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
27 -> 100001 [label="__VERIFIER_assert(c >= 0);" fontname="Courier New"]
100001 -> 33 [label="" fontname="Courier New"]
27 -> 33 [label="__VERIFIER_assert(c >= 0);" fontname="Courier New"]
33 -> 14 [label="return 0;" fontname="Courier New"]
29 -> 31 [label="[i <= 0]" fontname="Courier New"]
29 -> 30 [label="[!(i <= 0)]" fontname="Courier New"]
31 -> 27 [label="break" fontname="Courier New"]
21 -> 25 [label="while" fontname="Courier New"]
30 -> 25 [label="" fontname="Courier New"]
}